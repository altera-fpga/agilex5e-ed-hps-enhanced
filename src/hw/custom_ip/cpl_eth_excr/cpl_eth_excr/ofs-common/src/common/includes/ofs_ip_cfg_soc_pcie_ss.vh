//
// Generated by OFS script pcie_ss_get_cfg.tcl using qsys-script
//

`ifndef __OFS_FIM_IP_CFG_SOC_PCIE_SS__
`define __OFS_FIM_IP_CFG_SOC_PCIE_SS__ 1

//
// The OFS_FIM_IP_CFG_<ip_name>_PF<n>_ACTIVE macro will be defined iff the
// PF is active. The value does not have to be tested.
//
// For each active PF<n>, OFS_FIM_IP_CFG_<ip_name>_PF<n>_NUM_VFS will be
// defined iff there are VFs associated with the PF.
//
`define OFS_FIM_IP_CFG_SOC_PCIE_SS_PF0_ACTIVE 1
`define OFS_FIM_IP_CFG_SOC_PCIE_SS_PF0_BAR0_ADDR_WIDTH 21
`define OFS_FIM_IP_CFG_SOC_PCIE_SS_PF0_NUM_VFS 3
`define OFS_FIM_IP_CFG_SOC_PCIE_SS_PF0_VF_BAR0_ADDR_WIDTH 21


//
// The macros below represent the raw PF/VF configuration above in
// ways that are easier to process in SystemVerilog loops.
//

// Total number of PFs, not necessarily dense (see MAX_PF_NUM)
`define OFS_FIM_IP_CFG_SOC_PCIE_SS_NUM_PFS 1
// Total number of VFs across all PFs
`define OFS_FIM_IP_CFG_SOC_PCIE_SS_TOTAL_NUM_VFS 3
// Largest active PF number
`define OFS_FIM_IP_CFG_SOC_PCIE_SS_MAX_PF_NUM 0
// Largest number of VFs associated with a single PF
`define OFS_FIM_IP_CFG_SOC_PCIE_SS_MAX_VFS_PER_PF 3

// Vector indicating enabled PFs (1 if enabled) with
// index range 0 to OFS_FIM_IP_CFG_SOC_PCIE_SS_MAX_PF_NUM
`define OFS_FIM_IP_CFG_SOC_PCIE_SS_PF_ENABLED_VEC 1
// Vector with the number of VFs indexed by PF
`define OFS_FIM_IP_CFG_SOC_PCIE_SS_NUM_VFS_VEC 3


`endif // `ifndef __OFS_FIM_IP_CFG_SOC_PCIE_SS__
